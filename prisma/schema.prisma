generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Giveaway {
  id Int @id @default(autoincrement())

  location   GiveawayLocation @relation(fields: [locationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  locationId BigInt

  creator   User   @relation("creatorRelation", fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId BigInt

  messageId            BigInt?
  messageText          String?
  winnerCount          Int
  buttonText           String            @default("Участвовать")
  botsProtection       Boolean           @default(true)
  participantCount     Int               @default(0)
  participants         UserParticipant[] @relation()
  subscribeLocationIds BigInt[]

  photoFileId     String?
  animationFileId String?

  active              Boolean @default(true)
  publicated          Boolean @default(false)
  resultsIsSummarized Boolean @default(false)

  createdAt DateTime  @default(now())
  resultsAt DateTime?
}

model UserParticipant {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      BigInt
  giveaway    Giveaway @relation(fields: [giveawayId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  giveawayId  Int
  isWinner    Boolean  @default(false)
  winnerIndex Int?

  @@index([giveawayId, userId])
}

model GiveawayLocation {
  id        BigInt           @id
  type      LocationTypeEnum
  giveaways Giveaway[]
  user      User             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    BigInt
  title     String?
  name      String?          @unique
}

model User {
  id             BigInt             @id
  username       String?            @unique
  firstName      String
  locations      GiveawayLocation[]
  giveaways      Giveaway[]         @relation(name: "creatorRelation")
  participations UserParticipant[]
  botIsBlocked   Boolean            @default(false)
}

enum LocationTypeEnum {
  channel
  group
  supergroup
  private
}
